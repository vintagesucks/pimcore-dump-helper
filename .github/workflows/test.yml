name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - "macos-latest"
        php:
          - "8.1"
          - "8.2"
        skeleton:
          - "v10.2.2" # Pimcore ^10.5

    name: PHP ${{ matrix.php }}, Skeleton ${{ matrix.skeleton }}, ${{ matrix.os }}

    steps:
      - uses: ankane/setup-mysql@v1
        with:
          mysql-version: 8.0
          database: pimcore-dump-helper

      - name: Clone Skeleton
        run: git clone -b ${{ matrix.skeleton }} --single-branch --depth 1 https://github.com/pimcore/skeleton.git .

      - uses: actions/checkout@v3.5.3
        with:
          path: ./packages/pimcore-dump-helper

      - name: Setup PHP
        uses: shivammathur/setup-php@2.30.0
        with:
          php-version: ${{ matrix.php }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies (composer)
        uses: actions/cache@v3.3.1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install local repository
        run: composer config repositories.pimcore-dump-helper path ./packages/pimcore-dump-helper

      - name: Install local package
        run: composer require "vintagesucks/pimcore-dump-helper:@dev" --dev

      - name: Create .env
        run: cp ./packages/pimcore-dump-helper/.env .env

      - name: Import test.sql
        run: mysql -D pimcore-dump-helper < ./packages/pimcore-dump-helper/test.sql

      - name: database:dump
        run: vendor/bin/pimcore-dump-helper database:dump

      - name: cat latest.sql
        run: cat dumps/dev/latest.sql

      - name: Validate latest.sql
        run: cat dumps/dev/latest.sql | wc -l | grep 26
